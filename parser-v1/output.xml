<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.6.5 on win32)" generated="20190116 16:15:50.304" rpa="false">
<suite id="s1" name="Test Automation" source="C:\Users\DCTRACK\Desktop\test_automation">
<suite id="s1-s1" name="Regression Test" source="C:\Users\DCTRACK\Desktop\test_automation\Regression Test">
<suite id="s1-s1-s1" name="TMD-5352 BSTC003 User can select value for the individual blade and network chassis" source="C:\Users\DCTRACK\Desktop\test_automation\Regression Test\TMD-5352 BSTC003 User can select value for the individual blade and network chassis.robot">
<test id="s1-s1-s1-t1" name="TMD-5352 BSTC003 User can select value for the individual blade">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>On The Items List Page</arg>
<arg>AND</arg>
<arg>Add An Item</arg>
<arg>F5 Networks</arg>
<arg>B2100</arg>
<arg>TESTCASE5352</arg>
<arg>Planned</arg>
</arguments>
<kw name="On The Items List Page" library="DCTLibrary">
<doc>Open browser and login dcTrack (default: _admin_) and enter the items list page.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${user}" != "${EMPTY}"</arg>
<arg>Login</arg>
<arg>&amp;{user}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>&amp;{administrator}</arg>
</arguments>
<kw name="Login" library="DCTLibrary">
<doc>Prepare a dictionary variable as below:
| =Variables= | =name= | =password= |
| {'name': 'admin', 'password': 'sunbird'} | name=admin | password=xxx1234!!! |
Usage:
| Login | {'name': 'admin', 'password': 'sunbird'} |</doc>
<arguments>
<arg>&amp;{administrator}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${headless}</arg>
<arg>Open Headless Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>ELSE</arg>
<arg>Run Keywords</arg>
<arg>Open Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>AND</arg>
<arg>Maximize Browser Window</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>AND</arg>
<arg>Maximize Browser Window</arg>
</arguments>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
</arguments>
<msg timestamp="20190116 16:15:50.934" level="INFO">Opening browser 'chrome' to base url 'https://140.124.181.93'.</msg>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:15:53.828"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20190116 16:15:53.837" endtime="20190116 16:15:54.987"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:15:54.988"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:15:54.988"></status>
</kw>
<kw name="Input Text After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@id='login']</arg>
<arg>&amp;{account}[name]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:54.989" endtime="20190116 16:15:54.997"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:54.997" endtime="20190116 16:15:55.029"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:55.029" endtime="20190116 16:15:55.060"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20190116 16:15:55.060" level="INFO">Typing text 'admin' into text field 'xpath://input[@id='login']'.</msg>
<status status="PASS" starttime="20190116 16:15:55.060" endtime="20190116 16:15:55.140"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:54.988" endtime="20190116 16:15:55.140"></status>
</kw>
<kw name="Input Password After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@id='password']</arg>
<arg>&amp;{account}[password]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:55.141" endtime="20190116 16:15:55.154"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:55.155" endtime="20190116 16:15:55.176"></status>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<doc>Types the given password into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20190116 16:15:55.177" level="INFO">Typing password into text field 'xpath://input[@id='password']'.</msg>
<status status="PASS" starttime="20190116 16:15:55.177" endtime="20190116 16:15:55.268"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:55.141" endtime="20190116 16:15:55.269"></status>
</kw>
<kw name="Click Button After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@value='Log in']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:55.271" endtime="20190116 16:15:55.285"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:55.286" endtime="20190116 16:15:55.309"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:15:55.311" level="INFO">Clicking button 'xpath://input[@value='Log in']'.</msg>
<status status="PASS" starttime="20190116 16:15:55.310" endtime="20190116 16:15:56.296"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:55.269" endtime="20190116 16:15:56.297"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Wait Until Page Contains Element</arg>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=1s</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=1s</arg>
</arguments>
<msg timestamp="20190116 16:15:56.689" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:15:57.810" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-1.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:15:56.299" endtime="20190116 16:15:57.810"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:56.298" endtime="20190116 16:15:57.811"></status>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` disappears from current page.</doc>
<arguments>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:57.811" endtime="20190116 16:15:57.918"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:15:57.918"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:15:57.919"></status>
</kw>
<kw name="Click Tab" library="DCTLibrary">
<doc>Usage:
| Click Tab | Assets |
| Click Tab | Settings |
| Click Tab | Assets | Items List |
| Click Tab | Assets | File Import |
| Click Tab | Settings | Locations |</doc>
<arguments>
<arg>Assets</arg>
<arg>Items List</arg>
</arguments>
<kw name="Hover Tab" library="DCTLibrary">
<doc>Hover with the mouse over the ``tabName`` tab menu</doc>
<arguments>
<arg>${tabName}</arg>
</arguments>
<kw name="Mouse Over After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[@id="headerToolbar"]//img[@class='product-logo']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:57.926" endtime="20190116 16:15:57.947"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:57.948" endtime="20190116 16:15:57.982"></status>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<doc>Simulates hovering mouse over the element ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:15:57.984" level="INFO">Simulating Mouse Over on element 'xpath://*[@id="headerToolbar"]//img[@class='product-logo']'.</msg>
<status status="PASS" starttime="20190116 16:15:57.983" endtime="20190116 16:15:58.022"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:57.925" endtime="20190116 16:15:58.023"></status>
</kw>
<kw name="Mouse Over After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[text()='${tabName}']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:58.024" endtime="20190116 16:15:58.043"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:58.043" endtime="20190116 16:15:58.068"></status>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<doc>Simulates hovering mouse over the element ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:15:58.069" level="INFO">Simulating Mouse Over on element 'xpath://*[text()='Assets']'.</msg>
<status status="PASS" starttime="20190116 16:15:58.069" endtime="20190116 16:15:58.112"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:58.023" endtime="20190116 16:15:58.112"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, 'open')]//*[contains(@class,'dropdown')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:15:58.507" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:15:58.745" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-1.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:15:58.112" endtime="20190116 16:15:58.745"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:57.921" endtime="20190116 16:15:58.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${itemName}"=="${EMPTY}"</arg>
<arg>Click Element</arg>
<arg>xpath://*[text()='${tabName}']</arg>
<arg>ELSE</arg>
<arg>Click Element</arg>
<arg>xpath://*[text()='${itemName}']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[text()='${itemName}']</arg>
</arguments>
<msg timestamp="20190116 16:15:58.748" level="INFO">Clicking element 'xpath://*[text()='Items List']'.</msg>
<status status="PASS" starttime="20190116 16:15:58.747" endtime="20190116 16:15:59.329"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:58.746" endtime="20190116 16:15:59.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${tabName}' == 'Assets' and '${itemName}' == 'Items List'</arg>
<arg>Items List::Wait Until Items List Page Is Visible</arg>
</arguments>
<kw name="Items List::Wait Until Items List Page Is Visible" library="DCTLibrary">
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:15:59.332" endtime="20190116 16:16:00.243"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:00.244" endtime="20190116 16:16:02.387"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:02.388" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:02.388" endtime="20190116 16:16:03.598"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:59.331" endtime="20190116 16:16:03.627"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://div[contains(@class,'active')]//div[@id='items-list']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
<arg>error=Current page is not items list</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:03.627" endtime="20190116 16:16:03.640"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[contains(@class,'active')]//div[contains(@class, 'ui-grid-render-container-body')]//div[contains(@class, 'ui-grid-viewport')]//div[contains(@class, 'ui-grid-cell')]</arg>
<arg>timeout=${longPeriodOfTime}</arg>
<arg>error=Items list is not shown</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:03.640" endtime="20190116 16:16:03.746"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:03.747" endtime="20190116 16:16:03.768"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:59.331" endtime="20190116 16:16:03.768"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:59.330" endtime="20190116 16:16:03.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${tabName}' == 'Settings' and '${itemName}' == 'Models Library'</arg>
<arg>Models Library::Wait Until Page Is Visible</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:03.769" endtime="20190116 16:16:03.769"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:57.920" endtime="20190116 16:16:03.770"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:16:03.770"></status>
</kw>
<kw name="Add An Item" library="RegressionTest">
<arguments>
<arg>F5 Networks</arg>
<arg>B2100</arg>
<arg>TESTCASE5352</arg>
<arg>Planned</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:03.770" endtime="20190116 16:16:05.307"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.934" endtime="20190116 16:16:05.307"></status>
</kw>
<kw name="Open An Item With Edit Mode" library="Keywords">
<arguments>
<arg>TESTCASE5352</arg>
</arguments>
<kw name="Items List::Select Item By Name" library="Keywords">
<doc>Example:
| Select Item By Name | TESTCASE5352 |
| Select Item By Name | 101 |</doc>
<arguments>
<arg>${itemName}</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:05.307" endtime="20190116 16:16:05.322"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:05.322" endtime="20190116 16:16:05.338"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:05.338" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:05.338" endtime="20190116 16:16:05.354"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:05.307" endtime="20190116 16:16:05.369"></status>
</kw>
<kw name="Input Text After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[contains(@id, 'tiName')]</arg>
<arg>${item_name}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:05.369" endtime="20190116 16:16:05.385"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:05.385" endtime="20190116 16:16:05.416"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:05.416" endtime="20190116 16:16:05.463"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20190116 16:16:05.463" level="INFO">Typing text 'TESTCASE5352' into text field 'xpath://*[contains(@id, 'tiName')]'.</msg>
<status status="PASS" starttime="20190116 16:16:05.463" endtime="20190116 16:16:07.078"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:05.369" endtime="20190116 16:16:07.078"></status>
</kw>
<kw name="Press Key After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[contains(@id, 'tiName')]</arg>
<arg>\\13</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.079" endtime="20190116 16:16:07.100"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.100" endtime="20190116 16:16:07.111"></status>
</kw>
<kw name="Press Key" library="SeleniumLibrary">
<doc>Simulates user pressing key on element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.111" endtime="20190116 16:16:07.241"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:07.079" endtime="20190116 16:16:07.241"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://div[@class='ui-grid-row']//*[contains(text(), '${item_name}')]</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.242" endtime="20190116 16:16:07.418"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ui-grid-row']//*[contains(text(), '${item_name}')]</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.418" endtime="20190116 16:16:07.461"></status>
</kw>
<kw name="Click Element After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://div[normalize-space()='${item_name}' and not(child::*)]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.463" endtime="20190116 16:16:07.480"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.480" endtime="20190116 16:16:07.480"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:07.480" level="INFO">Clicking element 'xpath://div[normalize-space()='TESTCASE5352' and not(child::*)]'.</msg>
<status status="PASS" starttime="20190116 16:16:07.480" endtime="20190116 16:16:07.628"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:07.462" endtime="20190116 16:16:07.628"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:07.628" endtime="20190116 16:16:07.634"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:05.307" endtime="20190116 16:16:07.635"></status>
</kw>
<kw name="Items List::Click ToolBar Button" library="Keywords">
<arguments>
<arg>Edit</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.636" endtime="20190116 16:16:07.650"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.652" endtime="20190116 16:16:07.670"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:07.671" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:07.670" endtime="20190116 16:16:07.691"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:07.636" endtime="20190116 16:16:07.698"></status>
</kw>
<kw name="Click Element After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://div[contains(@class, 'active')]//button[normalize-space()='${buttonText}' and not(contains(@class, 'disabled'))]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.700" endtime="20190116 16:16:07.737"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:07.737" endtime="20190116 16:16:07.760"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:07.760" level="INFO">Clicking element 'xpath://div[contains(@class, 'active')]//button[normalize-space()='Edit' and not(contains(@class, 'disabled'))]'.</msg>
<status status="PASS" starttime="20190116 16:16:07.760" endtime="20190116 16:16:08.111"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:07.699" endtime="20190116 16:16:08.111"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:08.112" endtime="20190116 16:16:08.147"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:07.635" endtime="20190116 16:16:08.149"></status>
</kw>
<kw name="Items List::Wait Until Item Is Opened" library="DCTLibrary">
<arguments>
<arg>${itemName}</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:08.151" endtime="20190116 16:16:08.184"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:08.185" endtime="20190116 16:16:08.206"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:08.207" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:08.207" endtime="20190116 16:16:08.244"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:08.150" endtime="20190116 16:16:08.256"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>"${item}" == "${EMPTY}"</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://li[contains(@class, 'list-detail-tabbar') and contains(@class, 'active') and normalize-space()='${item}']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://li[contains(@class, 'list-detail-tabbar') and contains(@class, 'active') and normalize-space()='${item}']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:08.912" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:09.652" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-1.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:16:08.257" endtime="20190116 16:16:09.652"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:08.257" endtime="20190116 16:16:09.652"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'active')]//*[@id='identity_panel']//input[@id='tiName']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:09.652" endtime="20190116 16:16:09.683"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:09.683" endtime="20190116 16:16:09.683"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:08.149" endtime="20190116 16:16:09.683"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:05.307" endtime="20190116 16:16:09.683"></status>
</kw>
<kw name="Edit Alias, Type, Function, Customer Fields Info Of Item And Save">
<arguments>
<arg>TestCase5352Alias</arg>
<arg>Console</arg>
<arg>Access Network</arg>
<arg>ABE Production</arg>
</arguments>
<kw name="Input Field Content" library="DCTLibrary">
<arguments>
<arg>Alias</arg>
<arg>${aliasContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:09.683" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:09.683" endtime="20190116 16:16:09.715"></status>
</kw>
<kw name="Input Text After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[contains(@class, "active")]//*[normalize-space()="${fieldName}"]/../following-sibling::span[contains(@class,"row-part")]//*[self::input or self::textarea]</arg>
<arg>${fieldContent}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:09.715" endtime="20190116 16:16:09.775"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:09.776" endtime="20190116 16:16:09.808"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:09.809" endtime="20190116 16:16:09.832"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20190116 16:16:09.832" level="INFO">Typing text 'TestCase5352Alias' into text field 'xpath://*[contains(@class, "active")]//*[normalize-space()="Alias"]/../following-sibling::span[contains(@class,"row-part")]//*[self::input or self::textarea]'.</msg>
<status status="PASS" starttime="20190116 16:16:09.832" endtime="20190116 16:16:10.465"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:09.715" endtime="20190116 16:16:10.466"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:10.467" endtime="20190116 16:16:10.473"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:09.683" endtime="20190116 16:16:10.473"></status>
</kw>
<kw name="Select Dropdown Content" library="DCTLibrary">
<arguments>
<arg>Type</arg>
<arg>${typeContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:10.474" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:10.474" endtime="20190116 16:16:10.498"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${dropdownName}".replace(" ", "")</arg>
</arguments>
<assign>
<var>${dropdownNameWithNoBlank}</var>
</assign>
<msg timestamp="20190116 16:16:10.508" level="INFO">${dropdownNameWithNoBlank} = Type</msg>
<status status="PASS" starttime="20190116 16:16:10.507" endtime="20190116 16:16:10.508"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class,"active")]//*[normalize-space()="${dropdownName}"]/../following-sibling::span[contains(@class,"row-part")]</arg>
</arguments>
<msg timestamp="20190116 16:16:10.509" level="INFO">Clicking element 'xpath://*[contains(@class,"active")]//*[normalize-space()="Type"]/../following-sibling::span[contains(@class,"row-part")]'.</msg>
<status status="PASS" starttime="20190116 16:16:10.508" endtime="20190116 16:16:10.674"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:10.674" endtime="20190116 16:16:10.722"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:10.723" endtime="20190116 16:16:10.748"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
</arguments>
<msg timestamp="20190116 16:16:10.749" level="INFO">Clicking element 'xpath://*[contains(@class, 'dropdown') and contains(@class, 'Type')]//div[normalize-space()='Console']'.</msg>
<status status="PASS" starttime="20190116 16:16:10.749" endtime="20190116 16:16:10.855"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:10.855" endtime="20190116 16:16:10.859"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:10.473" endtime="20190116 16:16:10.859"></status>
</kw>
<kw name="Select Dropdown Content" library="DCTLibrary">
<arguments>
<arg>Function</arg>
<arg>${functionContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:10.860" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:10.860" endtime="20190116 16:16:10.885"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${dropdownName}".replace(" ", "")</arg>
</arguments>
<assign>
<var>${dropdownNameWithNoBlank}</var>
</assign>
<msg timestamp="20190116 16:16:10.899" level="INFO">${dropdownNameWithNoBlank} = Function</msg>
<status status="PASS" starttime="20190116 16:16:10.899" endtime="20190116 16:16:10.899"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class,"active")]//*[normalize-space()="${dropdownName}"]/../following-sibling::span[contains(@class,"row-part")]</arg>
</arguments>
<msg timestamp="20190116 16:16:10.900" level="INFO">Clicking element 'xpath://*[contains(@class,"active")]//*[normalize-space()="Function"]/../following-sibling::span[contains(@class,"row-part")]'.</msg>
<status status="PASS" starttime="20190116 16:16:10.900" endtime="20190116 16:16:10.997"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:10.997" endtime="20190116 16:16:11.013"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.014" endtime="20190116 16:16:11.034"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
</arguments>
<msg timestamp="20190116 16:16:11.034" level="INFO">Clicking element 'xpath://*[contains(@class, 'dropdown') and contains(@class, 'Function')]//div[normalize-space()='Access Network']'.</msg>
<status status="PASS" starttime="20190116 16:16:11.034" endtime="20190116 16:16:11.125"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:11.125" endtime="20190116 16:16:11.129"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:10.859" endtime="20190116 16:16:11.129"></status>
</kw>
<kw name="Select Dropdown Content" library="DCTLibrary">
<arguments>
<arg>Customer</arg>
<arg>${customerContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:11.130" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:11.130" endtime="20190116 16:16:11.149"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${dropdownName}".replace(" ", "")</arg>
</arguments>
<assign>
<var>${dropdownNameWithNoBlank}</var>
</assign>
<msg timestamp="20190116 16:16:11.159" level="INFO">${dropdownNameWithNoBlank} = Customer</msg>
<status status="PASS" starttime="20190116 16:16:11.158" endtime="20190116 16:16:11.159"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class,"active")]//*[normalize-space()="${dropdownName}"]/../following-sibling::span[contains(@class,"row-part")]</arg>
</arguments>
<msg timestamp="20190116 16:16:11.160" level="INFO">Clicking element 'xpath://*[contains(@class,"active")]//*[normalize-space()="Customer"]/../following-sibling::span[contains(@class,"row-part")]'.</msg>
<status status="PASS" starttime="20190116 16:16:11.159" endtime="20190116 16:16:11.252"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.252" endtime="20190116 16:16:11.273"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.274" endtime="20190116 16:16:11.296"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, '${dropdownNameWithNoBlank}')]//div[normalize-space()='${dropdownContent}']</arg>
</arguments>
<msg timestamp="20190116 16:16:11.297" level="INFO">Clicking element 'xpath://*[contains(@class, 'dropdown') and contains(@class, 'Customer')]//div[normalize-space()='ABE Production']'.</msg>
<status status="PASS" starttime="20190116 16:16:11.296" endtime="20190116 16:16:11.396"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:11.396" endtime="20190116 16:16:11.399"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:11.129" endtime="20190116 16:16:11.399"></status>
</kw>
<kw name="Items List::Save Item" library="DCTLibrary">
<doc>Sometimes click save button will popup a warning dialog that shows "The field Name is required. Please fill in the Name."</doc>
<kw name="Items List::Click Save Button" library="DCTLibrary">
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.402" endtime="20190116 16:16:11.410"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.411" endtime="20190116 16:16:11.426"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:11.427" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:11.426" endtime="20190116 16:16:11.448"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:11.401" endtime="20190116 16:16:11.456"></status>
</kw>
<kw name="Click Button After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://div[contains(@class, 'active')]//button[normalize-space()='Save' and not(contains(@class, 'disabled'))]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.457" endtime="20190116 16:16:11.471"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:11.471" endtime="20190116 16:16:11.495"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:11.496" level="INFO">Clicking button 'xpath://div[contains(@class, 'active')]//button[normalize-space()='Save' and not(contains(@class, 'disabled'))]'.</msg>
<status status="PASS" starttime="20190116 16:16:11.495" endtime="20190116 16:16:11.660"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:11.456" endtime="20190116 16:16:11.661"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:11.661" endtime="20190116 16:16:11.667"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:11.401" endtime="20190116 16:16:11.667"></status>
</kw>
<kw name="Is Warning Dialog Shown" library="DCTLibrary">
<assign>
<var>${isWarningDialog}</var>
</assign>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:11.669" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:11.668" endtime="20190116 16:16:11.693"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[contains(@class,'modal-dialog')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<assign>
<var>${isWarningDialog}</var>
</assign>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[contains(@class,'modal-dialog')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:12.038" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:12.798" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:13.708" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:14.220" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:14.735" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190116 16:16:15.235" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20190116 16:16:14.938" endtime="20190116 16:16:15.235"></status>
</kw>
<msg timestamp="20190116 16:16:15.267" level="FAIL">Element 'xpath://div[contains(@class,'modal-dialog')]' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20190116 16:16:11.705" endtime="20190116 16:16:15.267"></status>
</kw>
<msg timestamp="20190116 16:16:15.267" level="INFO">${isWarningDialog} = False</msg>
<status status="PASS" starttime="20190116 16:16:11.704" endtime="20190116 16:16:15.267"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.267"></status>
</kw>
<msg timestamp="20190116 16:16:15.267" level="INFO">${isWarningDialog} = False</msg>
<status status="PASS" starttime="20190116 16:16:11.668" endtime="20190116 16:16:15.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isWarningDialog}</arg>
<arg>Get Warning Dialog Text</arg>
</arguments>
<assign>
<var>${dialogText}</var>
</assign>
<msg timestamp="20190116 16:16:15.267" level="INFO">${dialogText} = None</msg>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isWarningDialog}</arg>
<arg>Evaluate</arg>
<arg>${retry} - 1</arg>
</arguments>
<assign>
<var>${retry}</var>
</assign>
<msg timestamp="20190116 16:16:15.267" level="INFO">${retry} = None</msg>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isWarningDialog} and ('Do you wish to continue' in '''${dialogText}''')</arg>
<arg>Items List::Warning Dialog::Click Yes</arg>
<arg>ELSE IF</arg>
<arg>${isWarningDialog} and ('Name is required' in '''${dialogText}''') and ${retry} &gt; 0</arg>
<arg>Run Keywords</arg>
<arg>Close The Warning Dialog</arg>
<arg>AND</arg>
<arg>Items List::Save Item</arg>
<arg>${retry}</arg>
<arg>ELSE IF</arg>
<arg>${isWarningDialog} and ('Name is required' in '''${dialogText}''') and ${retry} == 0</arg>
<arg>Fail</arg>
<arg>Can not save the item even retry 3 times.</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.267"></status>
</kw>
<kw name="Items List::Wait Until Item Bullet Is Green" library="DCTLibrary">
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.282"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.282" endtime="20190116 16:16:15.298"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:15.298" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:15.298" endtime="20190116 16:16:15.314"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.329"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'active') and contains(@class, 'bullet-complete')]</arg>
<arg>timeout=${longPeriodOfTime}</arg>
<arg>error=Bullet is not green</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.329" endtime="20190116 16:16:15.345"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:15.345" endtime="20190116 16:16:15.345"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.267" endtime="20190116 16:16:15.345"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:11.400" endtime="20190116 16:16:15.345"></status>
</kw>
<kw name="Items List::Close All Tabs" library="DCTLibrary">
<doc>Close all opened tabs each by each.</doc>
<kw name="Items List::Get Opened Tabs" library="DCTLibrary">
<doc>Get all opened tab names.
| @{tabs} = | Items List::Get Opened Tabs |
@{tabs} = ['1A', '106', '107', '1B']</doc>
<assign>
<var>@{tabNames}</var>
</assign>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:15.345" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:15.345" endtime="20190116 16:16:15.360"></status>
</kw>
<kw name="Get Menu Texts" library="dctSeleniumLibrary">
<doc>Get texts of web elements. A separator is represented as a text *'separator'*.</doc>
<arguments>
<arg>xpath://li[contains(@class,'detail-tabbar') and not(.//child::div[contains(@class,'first-tab')])]</arg>
</arguments>
<assign>
<var>@{tabs}</var>
</assign>
<msg timestamp="20190116 16:16:15.423" level="INFO">@{tabs} = [ TESTCASE5352 ]</msg>
<status status="PASS" starttime="20190116 16:16:15.376" endtime="20190116 16:16:15.423"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:15.423" endtime="20190116 16:16:15.423"></status>
</kw>
<msg timestamp="20190116 16:16:15.423" level="INFO">@{tabNames} = [ TESTCASE5352 ]</msg>
<status status="PASS" starttime="20190116 16:16:15.345" endtime="20190116 16:16:15.423"></status>
</kw>
<kw name="${tabName} IN [ @{tabNames} ]" type="for">
<kw name="${tabName} = TESTCASE5352" type="foritem">
<kw name="Items List::Close Tab" library="DCTLibrary">
<doc>Close a tab
| Items List::Close Tab | 1A |
| Items List::Close Tab | 106 |
| Items List::Close Tab | 1B |
Close the current tab
| Close Tab |</doc>
<arguments>
<arg>${tabName}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:15.423" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:15.423" endtime="20190116 16:16:15.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${tabName}" == "${EMPTY}"</arg>
<arg>Click Element</arg>
<arg>xpath://*[contains(@class,'active')]//button[contains(@class,'tab-close')]</arg>
<arg>ELSE</arg>
<arg>Click Element</arg>
<arg>xpath://label[text()='${tabName}']/following-sibling::button</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>xpath://label[text()='${tabName}']/following-sibling::button</arg>
</arguments>
<msg timestamp="20190116 16:16:15.454" level="INFO">Clicking element 'xpath://label[text()='TESTCASE5352']/following-sibling::button'.</msg>
<status status="PASS" starttime="20190116 16:16:15.454" endtime="20190116 16:16:15.615"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.454" endtime="20190116 16:16:15.615"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:15.616" endtime="20190116 16:16:15.624"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.423" endtime="20190116 16:16:15.625"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.423" endtime="20190116 16:16:15.625"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.423" endtime="20190116 16:16:15.625"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.345" endtime="20190116 16:16:15.625"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:09.683" endtime="20190116 16:16:15.626"></status>
</kw>
<kw name="Open An Item With Edit Mode" library="Keywords">
<arguments>
<arg>TESTCASE5352</arg>
</arguments>
<kw name="Items List::Select Item By Name" library="Keywords">
<doc>Example:
| Select Item By Name | TESTCASE5352 |
| Select Item By Name | 101 |</doc>
<arguments>
<arg>${itemName}</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.627" endtime="20190116 16:16:15.635"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.636" endtime="20190116 16:16:15.643"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:15.643" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:15.643" endtime="20190116 16:16:15.658"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.627" endtime="20190116 16:16:15.674"></status>
</kw>
<kw name="Input Text After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[contains(@id, 'tiName')]</arg>
<arg>${item_name}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.674" endtime="20190116 16:16:15.674"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.674" endtime="20190116 16:16:15.690"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:15.690" endtime="20190116 16:16:15.705"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20190116 16:16:15.705" level="INFO">Typing text 'TESTCASE5352' into text field 'xpath://*[contains(@id, 'tiName')]'.</msg>
<status status="PASS" starttime="20190116 16:16:15.705" endtime="20190116 16:16:17.256"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.674" endtime="20190116 16:16:17.257"></status>
</kw>
<kw name="Press Key After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[contains(@id, 'tiName')]</arg>
<arg>\\13</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.258" endtime="20190116 16:16:17.269"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.269" endtime="20190116 16:16:17.274"></status>
</kw>
<kw name="Press Key" library="SeleniumLibrary">
<doc>Simulates user pressing key on element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.274" endtime="20190116 16:16:17.305"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:17.257" endtime="20190116 16:16:17.305"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://div[@class='ui-grid-row']//*[contains(text(), '${item_name}')]</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.305" endtime="20190116 16:16:17.321"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ui-grid-row']//*[contains(text(), '${item_name}')]</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.321" endtime="20190116 16:16:17.336"></status>
</kw>
<kw name="Click Element After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://div[normalize-space()='${item_name}' and not(child::*)]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.336" endtime="20190116 16:16:17.352"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.352" endtime="20190116 16:16:17.368"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:17.368" level="INFO">Clicking element 'xpath://div[normalize-space()='TESTCASE5352' and not(child::*)]'.</msg>
<status status="PASS" starttime="20190116 16:16:17.368" endtime="20190116 16:16:17.491"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:17.336" endtime="20190116 16:16:17.492"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:17.492" endtime="20190116 16:16:17.504"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.626" endtime="20190116 16:16:17.504"></status>
</kw>
<kw name="Items List::Click ToolBar Button" library="Keywords">
<arguments>
<arg>Edit</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.505" endtime="20190116 16:16:17.514"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:17.514" endtime="20190116 16:16:17.529"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:17.530" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:17.530" endtime="20190116 16:16:17.552"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:17.505" endtime="20190116 16:16:17.561"></status>
</kw>
<kw name="Click Element After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://div[contains(@class, 'active')]//button[normalize-space()='${buttonText}' and not(contains(@class, 'disabled'))]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:17.923" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:18.126" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-7.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:16:17.562" endtime="20190116 16:16:18.126"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:18.142" endtime="20190116 16:16:18.157"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:18.157" level="INFO">Clicking element 'xpath://div[contains(@class, 'active')]//button[normalize-space()='Edit' and not(contains(@class, 'disabled'))]'.</msg>
<status status="PASS" starttime="20190116 16:16:18.157" endtime="20190116 16:16:18.361"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:17.562" endtime="20190116 16:16:18.361"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:18.362" endtime="20190116 16:16:18.379"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:17.504" endtime="20190116 16:16:18.380"></status>
</kw>
<kw name="Items List::Wait Until Item Is Opened" library="DCTLibrary">
<arguments>
<arg>${itemName}</arg>
</arguments>
<kw name="Select Frame After It Is Visible" library="DCTLibrary">
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:18.381" endtime="20190116 16:16:18.387"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:18.388" endtime="20190116 16:16:18.402"></status>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:18.403" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:18.403" endtime="20190116 16:16:18.435"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:18.381" endtime="20190116 16:16:18.450"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>"${item}" == "${EMPTY}"</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://li[contains(@class, 'list-detail-tabbar') and contains(@class, 'active') and normalize-space()='${item}']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://li[contains(@class, 'list-detail-tabbar') and contains(@class, 'active') and normalize-space()='${item}']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:18.871" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:19.359" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-7.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:16:18.450" endtime="20190116 16:16:19.359"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:18.450" endtime="20190116 16:16:19.359"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'active')]//*[@id='identity_panel']//input[@id='tiName']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:19.359" endtime="20190116 16:16:19.374"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:19.374" endtime="20190116 16:16:19.374"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:18.380" endtime="20190116 16:16:19.374"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:15.626" endtime="20190116 16:16:19.374"></status>
</kw>
<kw name="Verify Values Are Changed And Saved">
<arguments>
<arg>TestCase5352Alias</arg>
<arg>Console</arg>
<arg>Access Network</arg>
<arg>ABE Production</arg>
</arguments>
<kw name="Value Of Field Should Be" library="Keywords">
<doc>Fail if the content of field is not equal to expect content.</doc>
<arguments>
<arg>Alias</arg>
<arg>${expectedAliasContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:19.374" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:19.374" endtime="20190116 16:16:19.423"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<assign>
<var>${isDropdownField}</var>
</assign>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:19.769" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:20.278" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:20.813" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:21.357" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:21.886" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:22.376" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190116 16:16:22.885" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20190116 16:16:22.591" endtime="20190116 16:16:22.885"></status>
</kw>
<msg timestamp="20190116 16:16:22.885" level="FAIL">Element 'xpath://*[contains(@class,'active')]//*[normalize-space()='Alias']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20190116 16:16:19.456" endtime="20190116 16:16:22.885"></status>
</kw>
<msg timestamp="20190116 16:16:22.885" level="INFO">${isDropdownField} = False</msg>
<status status="PASS" starttime="20190116 16:16:19.456" endtime="20190116 16:16:22.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isDropdownField}</arg>
<arg>Get Text</arg>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
<arg>ELSE</arg>
<arg>Get Value</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//*[self::input or self::textarea]</arg>
</arguments>
<assign>
<var>${actualContent}</var>
</assign>
<kw name="Get Value" library="SeleniumLibrary">
<doc>Returns the value attribute of element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//*[self::input or self::textarea]</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:22.885" endtime="20190116 16:16:22.916"></status>
</kw>
<msg timestamp="20190116 16:16:22.916" level="INFO">${actualContent} = TestCase5352Alias</msg>
<status status="PASS" starttime="20190116 16:16:22.885" endtime="20190116 16:16:22.916"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${expectedContent}</arg>
<arg>${actualContent}</arg>
<arg>msg=Value of field should be ${expectedContent}, but it is ${actualContent} now</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:22.916" endtime="20190116 16:16:22.916"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:22.916" endtime="20190116 16:16:22.916"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:19.374" endtime="20190116 16:16:22.916"></status>
</kw>
<kw name="Value Of Field Should Be" library="Keywords">
<doc>Fail if the content of field is not equal to expect content.</doc>
<arguments>
<arg>Type</arg>
<arg>${expectedTypeContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:22.916" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:22.916" endtime="20190116 16:16:22.932"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<assign>
<var>${isDropdownField}</var>
</assign>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:22.947" endtime="20190116 16:16:22.978"></status>
</kw>
<msg timestamp="20190116 16:16:22.978" level="INFO">${isDropdownField} = True</msg>
<status status="PASS" starttime="20190116 16:16:22.947" endtime="20190116 16:16:22.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isDropdownField}</arg>
<arg>Get Text</arg>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
<arg>ELSE</arg>
<arg>Get Value</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//*[self::input or self::textarea]</arg>
</arguments>
<assign>
<var>${actualContent}</var>
</assign>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:22.978" endtime="20190116 16:16:23.010"></status>
</kw>
<msg timestamp="20190116 16:16:23.010" level="INFO">${actualContent} = Console</msg>
<status status="PASS" starttime="20190116 16:16:22.978" endtime="20190116 16:16:23.010"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${expectedContent}</arg>
<arg>${actualContent}</arg>
<arg>msg=Value of field should be ${expectedContent}, but it is ${actualContent} now</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.010" endtime="20190116 16:16:23.010"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:23.010" endtime="20190116 16:16:23.025"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:22.916" endtime="20190116 16:16:23.025"></status>
</kw>
<kw name="Value Of Field Should Be" library="Keywords">
<doc>Fail if the content of field is not equal to expect content.</doc>
<arguments>
<arg>Function</arg>
<arg>${expectedFunctionContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:23.025" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:23.025" endtime="20190116 16:16:23.041"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<assign>
<var>${isDropdownField}</var>
</assign>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.041" endtime="20190116 16:16:23.072"></status>
</kw>
<msg timestamp="20190116 16:16:23.072" level="INFO">${isDropdownField} = True</msg>
<status status="PASS" starttime="20190116 16:16:23.041" endtime="20190116 16:16:23.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isDropdownField}</arg>
<arg>Get Text</arg>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
<arg>ELSE</arg>
<arg>Get Value</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//*[self::input or self::textarea]</arg>
</arguments>
<assign>
<var>${actualContent}</var>
</assign>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.072" endtime="20190116 16:16:23.103"></status>
</kw>
<msg timestamp="20190116 16:16:23.103" level="INFO">${actualContent} = Access Network</msg>
<status status="PASS" starttime="20190116 16:16:23.072" endtime="20190116 16:16:23.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${expectedContent}</arg>
<arg>${actualContent}</arg>
<arg>msg=Value of field should be ${expectedContent}, but it is ${actualContent} now</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.103" endtime="20190116 16:16:23.103"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:23.103" endtime="20190116 16:16:23.103"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:23.025" endtime="20190116 16:16:23.103"></status>
</kw>
<kw name="Value Of Field Should Be" library="Keywords">
<doc>Fail if the content of field is not equal to expect content.</doc>
<arguments>
<arg>Customer</arg>
<arg>${expectedCustomerContent}</arg>
</arguments>
<kw name="Select Frame" library="SeleniumLibrary">
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<arguments>
<arg>${assetsFrame}</arg>
</arguments>
<msg timestamp="20190116 16:16:23.103" level="INFO">Selecting frame 'xpath://iframe[@id='id_assets_frame']'.</msg>
<status status="PASS" starttime="20190116 16:16:23.103" endtime="20190116 16:16:23.135"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<assign>
<var>${isDropdownField}</var>
</assign>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[contains(@class,'selectize-control')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.135" endtime="20190116 16:16:23.166"></status>
</kw>
<msg timestamp="20190116 16:16:23.166" level="INFO">${isDropdownField} = True</msg>
<status status="PASS" starttime="20190116 16:16:23.135" endtime="20190116 16:16:23.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${isDropdownField}</arg>
<arg>Get Text</arg>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
<arg>ELSE</arg>
<arg>Get Value</arg>
<arg>xpath://*[contains(@class,'active')]//*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//*[self::input or self::textarea]</arg>
</arguments>
<assign>
<var>${actualContent}</var>
</assign>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>xpath://*[normalize-space()='${fieldName}']/../following-sibling::span[contains(@class,'row-part')]//div[@class='item']</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.166" endtime="20190116 16:16:23.197"></status>
</kw>
<msg timestamp="20190116 16:16:23.197" level="INFO">${actualContent} = ABE Production</msg>
<status status="PASS" starttime="20190116 16:16:23.166" endtime="20190116 16:16:23.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${expectedContent}</arg>
<arg>${actualContent}</arg>
<arg>msg=Value of field should be ${expectedContent}, but it is ${actualContent} now</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.197" endtime="20190116 16:16:23.197"></status>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary" type="teardown">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20190116 16:16:23.197" endtime="20190116 16:16:23.197"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:23.103" endtime="20190116 16:16:23.197"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:19.374" endtime="20190116 16:16:23.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Delete Item By Name</arg>
<arg>TESTCASE5352</arg>
<arg>AND</arg>
<arg>Logoff</arg>
</arguments>
<kw name="Delete Item By Name" library="dctSeleniumLibrary">
<arguments>
<arg>TESTCASE5352</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:23.213" endtime="20190116 16:16:23.744"></status>
</kw>
<kw name="Logoff" library="DCTLibrary">
<doc>Close Browser asynchronously</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20190116 16:16:23.744" endtime="20190116 16:16:25.915"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:23.744" endtime="20190116 16:16:25.915"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:23.213" endtime="20190116 16:16:25.915"></status>
</kw>
<status status="PASS" starttime="20190116 16:15:50.932" endtime="20190116 16:16:25.915" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="TMD-5352 BSTC003 User can select value for the network chassis">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>On The Items List Page</arg>
<arg>AND</arg>
<arg>Add An Item</arg>
<arg>Cisco Systems</arg>
<arg>UCS 6120XP</arg>
<arg>TESTCASE5352</arg>
<arg>Planned</arg>
</arguments>
<kw name="On The Items List Page" library="DCTLibrary">
<doc>Open browser and login dcTrack (default: _admin_) and enter the items list page.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${user}" != "${EMPTY}"</arg>
<arg>Login</arg>
<arg>&amp;{user}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>&amp;{administrator}</arg>
</arguments>
<kw name="Login" library="DCTLibrary">
<doc>Prepare a dictionary variable as below:
| =Variables= | =name= | =password= |
| {'name': 'admin', 'password': 'sunbird'} | name=admin | password=xxx1234!!! |
Usage:
| Login | {'name': 'admin', 'password': 'sunbird'} |</doc>
<arguments>
<arg>&amp;{administrator}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${headless}</arg>
<arg>Open Headless Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>ELSE</arg>
<arg>Run Keywords</arg>
<arg>Open Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>AND</arg>
<arg>Maximize Browser Window</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
<arg>AND</arg>
<arg>Maximize Browser Window</arg>
</arguments>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${dcTrackURL}</arg>
<arg>${browser}</arg>
</arguments>
<msg timestamp="20190116 16:16:25.935" level="INFO">Opening browser 'chrome' to base url 'https://140.124.181.93'.</msg>
<status status="PASS" starttime="20190116 16:16:25.935" endtime="20190116 16:16:28.367"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20190116 16:16:28.376" endtime="20190116 16:16:29.501"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:25.935" endtime="20190116 16:16:29.501"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:25.935" endtime="20190116 16:16:29.501"></status>
</kw>
<kw name="Input Text After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@id='login']</arg>
<arg>&amp;{account}[name]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.501" endtime="20190116 16:16:29.517"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.517" endtime="20190116 16:16:29.532"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.532" endtime="20190116 16:16:29.564"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20190116 16:16:29.564" level="INFO">Typing text 'admin' into text field 'xpath://input[@id='login']'.</msg>
<status status="PASS" starttime="20190116 16:16:29.564" endtime="20190116 16:16:29.635"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:29.501" endtime="20190116 16:16:29.636"></status>
</kw>
<kw name="Input Password After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@id='password']</arg>
<arg>&amp;{account}[password]</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.638" endtime="20190116 16:16:29.653"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.654" endtime="20190116 16:16:29.670"></status>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<doc>Types the given password into text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20190116 16:16:29.670" level="INFO">Typing password into text field 'xpath://input[@id='password']'.</msg>
<status status="PASS" starttime="20190116 16:16:29.670" endtime="20190116 16:16:29.768"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:29.637" endtime="20190116 16:16:29.768"></status>
</kw>
<kw name="Click Button After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://input[@value='Log in']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.773" endtime="20190116 16:16:29.787"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:29.787" endtime="20190116 16:16:29.810"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:29.811" level="INFO">Clicking button 'xpath://input[@value='Log in']'.</msg>
<status status="PASS" starttime="20190116 16:16:29.811" endtime="20190116 16:16:30.868"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:29.770" endtime="20190116 16:16:30.869"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Wait Until Page Contains Element</arg>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=1s</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=1s</arg>
</arguments>
<msg timestamp="20190116 16:16:31.256" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:32.134" level="INFO">Removed C:\Users\DCTRACK\Desktop\test_automation\selenium-screenshot-14.png because waiting keyword succeed.</msg>
<status status="PASS" starttime="20190116 16:16:30.870" endtime="20190116 16:16:32.134"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:30.869" endtime="20190116 16:16:32.135"></status>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` disappears from current page.</doc>
<arguments>
<arg>xpath://span[@class='app-spinner']</arg>
<arg>timeout=${normalPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:32.135" endtime="20190116 16:16:32.205"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:25.935" endtime="20190116 16:16:32.207"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:25.935" endtime="20190116 16:16:32.208"></status>
</kw>
<kw name="Click Tab" library="DCTLibrary">
<doc>Usage:
| Click Tab | Assets |
| Click Tab | Settings |
| Click Tab | Assets | Items List |
| Click Tab | Assets | File Import |
| Click Tab | Settings | Locations |</doc>
<arguments>
<arg>Assets</arg>
<arg>Items List</arg>
</arguments>
<kw name="Hover Tab" library="DCTLibrary">
<doc>Hover with the mouse over the ``tabName`` tab menu</doc>
<arguments>
<arg>${tabName}</arg>
</arguments>
<kw name="Mouse Over After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[@id="headerToolbar"]//img[@class='product-logo']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:32.212" endtime="20190116 16:16:32.237"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:32.238" endtime="20190116 16:16:32.278"></status>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<doc>Simulates hovering mouse over the element ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:32.279" level="INFO">Simulating Mouse Over on element 'xpath://*[@id="headerToolbar"]//img[@class='product-logo']'.</msg>
<status status="PASS" starttime="20190116 16:16:32.279" endtime="20190116 16:16:32.307"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:32.211" endtime="20190116 16:16:32.307"></status>
</kw>
<kw name="Mouse Over After It Is Visible" library="DCTLibrary">
<arguments>
<arg>xpath://*[text()='${tabName}']</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:32.308" endtime="20190116 16:16:32.322"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:32.323" endtime="20190116 16:16:32.344"></status>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<doc>Simulates hovering mouse over the element ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20190116 16:16:32.345" level="INFO">Simulating Mouse Over on element 'xpath://*[text()='Assets']'.</msg>
<status status="PASS" starttime="20190116 16:16:32.345" endtime="20190116 16:16:32.370"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:32.308" endtime="20190116 16:16:32.371"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://*[contains(@class, 'dropdown') and contains(@class, 'open')]//*[contains(@class,'dropdown')]</arg>
<arg>timeout=${shortPeriodOfTime}</arg>
</arguments>
<msg timestamp="20190116 16:16:32.790" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:33.514" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:34.265" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-16.png"&gt;&lt;img src="selenium-screenshot-16.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:34.889" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-17.png"&gt;&lt;img src="selenium-screenshot-17.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190116 16:16:35.421" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-18.png"&gt;&lt;img src="selenium-screenshot-18.png" width="800px"&gt;&lt;/a&gt;</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190116 16:16:35.946" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-19.png"&gt;&lt;img src="selenium-screenshot-19.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20190116 16:16:35.624" endtime="20190116 16:16:35.946"></status>
</kw>
<msg timestamp="20190116 16:16:35.946" level="FAIL">Element 'xpath://*[contains(@class, 'dropdown') and contains(@class, 'open')]//*[contains(@class,'dropdown')]' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20190116 16:16:32.371" endtime="20190116 16:16:35.946"></status>
</kw>
<msg timestamp="20190116 16:16:36.251" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-20.png"&gt;&lt;img src="selenium-screenshot-20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="FAIL" starttime="20190116 16:16:32.210" endtime="20190116 16:16:35.946"></status>
</kw>
<status status="FAIL" starttime="20190116 16:16:32.209" endtime="20190116 16:16:36.251"></status>
</kw>
<status status="FAIL" starttime="20190116 16:16:25.935" endtime="20190116 16:16:36.251"></status>
</kw>
<status status="FAIL" starttime="20190116 16:16:25.935" endtime="20190116 16:16:36.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Delete Item By Name</arg>
<arg>TESTCASE5352</arg>
<arg>AND</arg>
<arg>Logoff</arg>
</arguments>
<kw name="Delete Item By Name" library="dctSeleniumLibrary">
<arguments>
<arg>TESTCASE5352</arg>
</arguments>
<status status="PASS" starttime="20190116 16:16:36.251" endtime="20190116 16:16:36.547"></status>
</kw>
<kw name="Logoff" library="DCTLibrary">
<doc>Close Browser asynchronously</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20190116 16:16:36.563" endtime="20190116 16:16:38.812"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:36.563" endtime="20190116 16:16:38.812"></status>
</kw>
<status status="PASS" starttime="20190116 16:16:36.251" endtime="20190116 16:16:38.812"></status>
</kw>
<status status="FAIL" starttime="20190116 16:16:25.917" endtime="20190116 16:16:38.812" critical="yes">Setup failed:
Element 'xpath://*[contains(@class, 'dropdown') and contains(@class, 'open')]//*[contains(@class,'dropdown')]' not visible after 3 seconds.</status>
</test>
<status status="FAIL" starttime="20190116 16:15:50.601" endtime="20190116 16:16:38.815"></status>
</suite>
<status status="FAIL" starttime="20190116 16:15:50.601" endtime="20190116 16:16:38.816"></status>
</suite>
<status status="FAIL" starttime="20190116 16:15:50.569" endtime="20190116 16:16:38.816"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="1">Critical Tests</stat>
<stat pass="1" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="1" id="s1" name="Test Automation">Test Automation</stat>
<stat pass="1" fail="1" id="s1-s1" name="Regression Test">Test Automation.Regression Test</stat>
<stat pass="1" fail="1" id="s1-s1-s1" name="TMD-5352 BSTC003 User can select value for the individual blade and network chassis">Test Automation.Regression Test.TMD-5352 BSTC003 User can select value for the individual blade and network chassis</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190116 16:15:50.866" level="WARN">Error in file 'C:\Users\DCTRACK\Desktop\test_automation\Regression Test\Keywords.txt': Invalid syntax in keyword 'Select Filter Conditions': Using 'In' as a FOR loop separator is deprecated. Use 'IN' instead.</msg>
<msg timestamp="20190116 16:15:50.866" level="WARN">Error in file 'C:\Users\DCTRACK\Desktop\test_automation\Regression Test\Keywords.txt': Invalid syntax in keyword 'Radio Selection Of Column Field Should Be': Using 'In Range' as a FOR loop separator is deprecated. Use 'IN RANGE' instead.</msg>
</errors>
</robot>
